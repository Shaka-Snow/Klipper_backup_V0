#####################################################################
#   Macros
#####################################################################

#[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
#variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
#variable_runout_sensor    : ""    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything inside the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything inside the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything inside the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
#gcode:


[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    LIGHT_ON
    Tool_Head_Light_005
    G28                            ; home all axes
    G1 Z20 F3000                   ; move nozzle away from bed
    G92 E0
    G1 E2.0 F3600
    PI_FAN_ON
    #SET_GCODE_OFFSET Z0
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-2.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
    LIGHT_OFF
    Tool_Head_Light_Off
    PI_FAN_OFF
    M84                            ; Turn off motors
    
[gcode_macro LOAD_FILAMENT]
gcode:
  {% set SLOW = params.SLOW|default(60)|float %} ; Purge amount
  {% set FAST = params.FAST|default(80)|float %} ; Load length
  ##################
  {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
  {% if printer.configfile.settings.extruder.min_extrude_temp is defined %}
      {% set min_temp = printer.configfile.settings.extruder.min_extrude_temp|int %}
  {% else %}
      {% set min_temp = 170 %}
  {% endif %}
  {% if params.TARGET is defined %} ; If current temp is below target
    {% set TARGET = params.TARGET|int %}
    {% if cur_temp|int < TARGET|int %}
      M117 Heating nozzle...
      M109 S{TARGET} ; Heat nozzle to target temperature
    {% endif %}
  {% endif %}
  {% if printer.extruder.can_extrude == False %} ; Verify extruder is hot enough
    RESPOND TYPE=error MSG="Below minimum temp. Heating extruder..."
    M109 S{min_temp|int} ; Heat up to min_extrude_temp
  {% endif %}
  M117  LOADING...
  G91 ; Relative positioning
  G1 E25.0 F1000 ; pre-load
  G1 E{FAST} F2500 ; load up to hotend
  G4 P900 ; wait a moment
  G1 E{SLOW} F250 ; purge to change filament
  G90 ; Absolute postitioning
  SET_IDLE_TIMEOUT TIMEOUT=900 ; Return idle timeout to normal


#   M83                            ; set extruder to relative
#   G92 E0.0
#   G1 E45 F350                    ; load
#   G92 E0.0
#   M82                            ; set extruder to absolute
    
#[gcode_macro FILAMENT_UNLOAD]
#gcode:
# 
# Edit the default() value for LENGTH
# to the amount of retraction required to unload the filament
# 
# Edit the default() value for TARGET
# to the target extruder temperature used during filament change
[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set LENGTH = params.LENGTH|default(140)|float %} ; Unload length
  {% set TARGET = params.TARGET|default(220)|float %} ; Unload temperature
  ##################
  {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
  {% if printer.configfile.settings.extruder.min_extrude_temp is defined %}
      {% set min_temp = printer.configfile.settings.extruder.min_extrude_temp|int %}
  {% else %}
      {% set min_temp = 170 %}
  {% endif %}
  {% if cur_temp|int < TARGET|int %} ; If current temp is below target
    M117 Heating nozzle...
    M109 S{TARGET} ; Heat nozzle to target temperature
  {% endif %}
  {% if printer.extruder.can_extrude == False %} ; Verify extruder is hot enough
    RESPOND TYPE=error MSG="Below minimum temp. Heating extruder..."
    M109 S{min_temp|int} ; Heat up to min_extrude_temp
  {% endif %}
  G91 ; Relative positioning
  # Pre-unload
  G1 E5.0 F1200 
  G1 E3.0 F1600
  G1 E-13.14 F7000
  # Unload
  G1 E-{LENGTH} F3000
  G90 ; Absolute postitioning
  
  
#   M83                            ; set extruder to relative
#   G92 E0.0
#   G1 E10 F350                    ; extrude a little to soften tip
#   G1 E-40 F350                  ; retract some, but not too much or it will jam
#   G92 E0.0
#   M82                            ; set extruder to absolute

# Filament change
[gcode_macro M600]
gcode:
    PAUSE_MACRO
    UNLOAD_FILAMENT

[gcode_macro PAUSE_MACRO]
gcode:
    RESPOND TYPE=command MSG=action:paused
    PARK_MACRO
    PAUSE
    SET_IDLE_TIMEOUT TIMEOUT=3600

[gcode_macro PAUSE_MACRO_TWO]
gcode:
    RESPOND TYPE=command MSG=action:paused
    PARK_MACRO_TWO
    PAUSE
    SET_IDLE_TIMEOUT TIMEOUT=3600

[gcode_macro RESUME_MACRO]
gcode:
    RESTORE_GCODE_STATE name=PARK_MACRO_state
    RESUME
    RESPOND TYPE=command MSG=action:resumed

[gcode_macro RESUME_MACRO_TWO]
gcode:
    RESTORE_GCODE_STATE name=PARK_MACRO_TWO_state
    RESUME
    RESPOND TYPE=command MSG=action:resumed

[gcode_macro PARK_MACRO]
gcode:
    {% set X = params.X|default(5)|float %}
    {% set Y = params.Y|default(5)|float %}
    {% set Z = params.Z|default(18)|float %}
    SAVE_GCODE_STATE NAME=PARK_MACRO_state
    G91                     ; relative positioning
    G1 E-2 F1000            ; retract filament
    G1 Z{Z}                  ; lift z slightly             
    G90                     ; absolute positioning
    G1 X{X} Y{Y} F3000 ; park the head
    
[gcode_macro PARK_MACRO_TWO]
gcode:
    {% set X = params.X|default(3)|float %}
    {% set Y = params.Y|default(117)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=PARK_MACRO_state
    G91                     ; relative positioning
    G1 E-2 F1000            ; retract filament
    G1 Z{Z}                  ; lift z slightly             
    G90                     ; absolute positioning
    G1 X{X} Y{Y} F3000 ; park the head
    
#    {% set X = params.X|default(50)|float %}
#    {% set Y = params.Y|default(0)|float %}
#    {% set Z = params.Z|default(10)|float %}
#    SAVE_GCODE_STATE NAME=M600_state
#    PAUSE
#    G91
#    G1 E-.8 F2700
#    G1 Z{Z}
#    G90
#    G1 X{X} Y{Y} F3000
#    G91
#    G1 E-50 F1000
#    RESTORE_GCODE_STATE NAME=M600_state

#[gcode_macro M600]
#gcode:
#  SET_IDLE_TIMEOUT TIMEOUT=7200 ; Increase idle timeout
#  PAUSE ; Pause printing
#  UNLOAD_FILAMENT ; Unload filament

[gcode_macro PURGE]
gcode:
  {% set LENGTH = params.LENGTH|default(45)|float %} ; Purge length
  ##################
  {% set cur_temp = printer.extruder.temperature|float %} ; Current temperature
    {% if printer.configfile.settings.extruder.min_extrude_temp is defined %}
        {% set min_temp = printer.configfile.settings.extruder.min_extrude_temp|int %}
    {% else %}
        {% set min_temp = 170 %}
    {% endif %}
  {% if params.TARGET is defined %} ; If current temp is below target
    {% set TARGET = params.TARGET|int %}
    {% if cur_temp|int < TARGET|int %}
      M117 Heating nozzle...
      M109 S{TARGET} ; Heat nozzle to target temperature
    {% endif %}
  {% endif %}
  {% if printer.extruder.can_extrude == False %} ; Verify extruder is hot enough
    RESPOND TYPE=error MSG="Below minimum temp. Heating extruder..."
    M109 S{min_temp|int} ; Heat up to min_extrude_temp
  {% endif %}
  M117 PURGING..
  G91 ; Relative positioning
  G1 E{LENGTH} F250 ; Purge 45mm of filament
  G90 ; Absolute postitioning


[exclude_object]

#[gcode_macro M486]
#gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

#  {% if 'exclude_object' not in printer %}
#    {action_raise_error("[exclude_object] is not enabled")}
#  {% endif %}

#  {% if 'T' in params %}
#    EXCLUDE_OBJECT RESET=1

#    {% for i in range(params.T | int) %}
#      EXCLUDE_OBJECT_DEFINE NAME={i}
#    {% endfor %}
#  {% endif %}

#  {% if 'C' in params %}
#    EXCLUDE_OBJECT CURRENT=1
#  {% endif %}

#  {% if 'P' in params %}
#    EXCLUDE_OBJECT NAME={params.P}
#  {% endif %}

#  {% if 'S' in params %}
#    {% if params.S == '-1' %}
#      {% if printer.exclude_object.current_object %}
#        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
#      {% endif %}
#    {% else %}
#      EXCLUDE_OBJECT_START NAME={params.S}
#    {% endif %}
#  {% endif %}

#  {% if 'U' in params %}
#    EXCLUDE_OBJECT RESET=1 NAME={params.U}
#  {% endif %}

## UNSAFE_MOVE_TOOL
## Move the toolhead without homing
########## Parameters ##########
## X: The X distance to move by (default: 0) mm
## Y: The Y distance to move by (default: 0) mm
## Z: The Z distance to move by (default: 0) mm
## F: The feedrate to use (default: 10) mm/s
[gcode_macro UNSAFE_MOVE_TOOL]
description: Move the toolhead without homing
gcode:
    {% set z = params.Z|default(0)|float %}
    {% set x = params.X|default(0)|float %}
    {% set y = params.Y|default(0)|float %}
    {% set f = params.F|default(10)|float %}
    G90
    SET_KINEMATIC_POSITION Z={(printer.toolhead.axis_maximum.z/2)} X={(printer.toolhead.axis_maximum.x/2)} Y={(printer.toolhead.axis_maximum.y/2)}
    G0 X{(printer.toolhead.axis_maximum.x/2)+x} Y{(printer.toolhead.axis_maximum.y/2)+y} Z{(printer.toolhead.axis_maximum.z/2)+z} F{ (f*60) }
    M84

[gcode_macro SCREW_POINT_1]
gcode:
    G1 X5 Y113 F3000
   
[gcode_macro SCREW_POINT_2]
gcode:
    G1 X116 Y113 F3000
   
[gcode_macro SCREW_POINT_3]
gcode:
    G1 X60 Y3 F3000

[gcode_macro LIGHT_ON]
gcode:
    SET_LED LED=chember_light WHITE=0.75 #SET_FAN_SPEED FAN=chember_light SPEED=0.75 #SET_PIN PIN=chember_light VALUE=0.75
    
[gcode_macro LIGHT_FULL]
gcode:
    SET_LED LED=chember_light WHITE=1
    
[gcode_macro LIGHT_OFF]
gcode:
    SET_LED LED=chember_light WHITE=0

[gcode_macro PI_FAN_ON]
gcode:
    SET_FAN_SPEED FAN=pi_fan SPEED=1 #SET_PIN PIN=pi_fan VALUE=1

[gcode_macro PI_FAN_OFF]
gcode:
    SET_FAN_SPEED FAN=pi_fan SPEED=0

[gcode_macro NEVERMORE_ON]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=1 #SET_PIN PIN=nevermore VALUE=1

[gcode_macro NEVERMORE_OFF]
gcode:
    SET_FAN_SPEED FAN=nevermore SPEED=0
    
[gcode_macro Tool_Head_Light]
gcode:
    SET_LED LED=hotend_rgb RED=1 GREEN=1 BLUE=1 
    
[gcode_macro Tool_Head_Light_005]
gcode:
    SET_LED LED=hotend_rgb RED=0.05 GREEN=0.05 BLUE=0.05 
    
[gcode_macro Tool_Head_Light_Off]
gcode:
    SET_LED LED=hotend_rgb RED=0 GREEN=0 BLUE=0
    
