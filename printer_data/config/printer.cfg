# This file contains common pin mappings for the BIGTREETECH SKR
# MINI 2.0. To use this config, the firmware should be compiled for 
# the STM32F103 with a "28KiB bootloader". Also select "enable extra 
# low-level configuration options" and configure "GPIO pins to set 
# at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

## Voron Design VORON 0.1 SKR Mini E3 V2 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0

[include mainsail.cfg]
#[include nozzlewiper.cfg]
#[include klipperExpander.cfg]
[include klipper-mini12864.cfg]
[include Macros.cfg]
#[include raspberry-pi.cfg]
#[include KB2040_ADXL345.cfg]
[include BTT-ebb36-canbus.cfg]
[include BED_FANS_ACTIVE.cfg]

[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/ttyAMA0   #/dev/serial/by-id/usb-Klipper_stm32f103xe_38FFD7055357303922571043-if00 
restart_method: command

[printer]
kinematics: corexy
max_velocity: 400
max_accel: 8900  # should not exceed the estimated max_accel for X and Y axes
max_z_velocity: 15
max_z_accel: 300 #45
square_corner_velocity: 5.0

[input_shaper]
shaper_freq_x: 92.8
shaper_type_x: ei
shaper_freq_y: 69.2
shaper_type_y: ei

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: gpio6
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: !gpio5                                                       # Check motor direction in link above. If inverted, add a ! before PB12
enable_pin: !gpio7
rotation_distance: 40
microsteps: 32   #128
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: ^EBBCan:PB6 #gpio4 #tmc2209_stepper_y:virtual_endstop 
position_min: 0
#   Minimum valid distance (in mm) the user may command the stepper to
#   move to.  The default is 0mm.
position_endstop: 118
position_max: 120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0 #0
interpolate: False
run_current: 0.6
#hold_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
#diag_pin: ^gpio3                                                       # use the same pin that was previously the endstop_pin!
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.
#driver_SGTHRS: 255
#   Set the given register during the configuration of the TMC2209
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.

[stepper_y]
step_pin: gpio11
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: gpio10                                                        # Check motor direction in link above. If inverted, add a ! before PB2
enable_pin: !gpio12
rotation_distance: 40
microsteps: 32   #128
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: ^gpio3  # tmc2209_stepper_x:virtual_endstop   
position_min: 0
#   Minimum valid distance (in mm) the user may command the stepper to
#   move to.  The default is 0mm.
position_endstop: 119
position_max: 120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2 #2
interpolate: False
run_current: 0.6
#hold_current: 0.3
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
#diag_pin: ^gpio4                                                          # use the same pin that was previously the endstop_pin!
#   The micro-controller pin attached to the DIAG line of the TMC2209
#   chip. The pin is normally prefaced with "^" to enable a pullup.
#   Setting this creates a "tmc2209_stepper_x:virtual_endstop" virtual
#   pin which may be used as the stepper's endstop_pin. Doing this
#   enables "sensorless homing". (Be sure to also set driver_SGTHRS to
#   an appropriate sensitivity value.) The default is to not enable
#   sensorless homing.
#driver_SGTHRS: 255
#   Set the given register during the configuration of the TMC2209
#   chip. This may be used to set custom motor parameters. The
#   defaults for each parameter are next to the parameter name in the
#   above list.

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: gpio19
dir_pin: !gpio28                                                       # Remove the ! before PC5 if motor direction is inverted.
enable_pin: !gpio2
rotation_distance: 4                                                # For T8x8 integrated lead screw
microsteps: 32   #64
endstop_pin: ^gpio25
#position_endstop: -0.10
position_max: 119.5
position_min: -1.5
homing_speed: 10
second_homing_speed: 3.0
homing_retract_dist: 5.0

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1 #1
interpolate: False
## For OMC (StepperOnline) 17LS13-0404E-200G 0.4A 
run_current: 0.4
## For LDO-42STH25-1004CL200E 1.0A
#run_current: 0.37
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Endstop phase
#####################################################################

#[endstop_phase stepper_z]
#endstop_accuracy:
#   Sets the expected accuracy (in mm) of the endstop. This represents
#   the maximum error distance the endstop may trigger (eg, if an
#   endstop may occasionally trigger 100um early or up to 100um late
#   then set this to 0.200 for 200um). The default is
#   4*rotation_distance/full_steps_per_rotation.
#trigger_phase:
#   This specifies the phase of the stepper motor driver to expect
#   when hitting the endstop. It is composed of two numbers separated
#   by a forward slash character - the phase and the total number of
#   phases (eg, "7/64"). Only set this value if one is sure the
#   stepper motor driver is reset every time the mcu is reset. If this
#   is not set, then the stepper phase will be detected on the first
#   home and that phase will be used on all subsequent homes.
#endstop_align_zero: False
#   If true then the position_endstop of the axis will effectively be
#   modified so that the zero position for the axis occurs at a full
#   step on the stepper motor. (If used on the Z axis and the print
#   layer height is a multiple of a full step distance then every
#   layer will occur on a full step.) The default is False.

#####################################################################
#   Extruder
#####################################################################

#[extruder]
#step_pin: gpio14
#dir_pin: gpio13                                                        # Add ! if moving opposite direction
#enable_pin: !gpio15
#full_steps_per_rotation: 400                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
#rotation_distance: 23.045841                                            # See calibrating rotation_distance on extruders doc
#gear_ratio: 50:10                                                   # For Mini Afterburner
#microsteps: 32
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: gpio23
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
#sensor_type: Generic 3950
#sensor_pin: gpio27
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 24.367 #28.182
#pid_Ki: 1.203 #1.978
#pid_Kd: 123.359 #100.397
#min_temp: 0
#max_temp: 270
#min_extrude_temp: 190
#max_extrude_only_distance: 150
#max_extrude_cross_section: 0.8
#pressure_advance: 0.1                                               # See tuning pressure advance doc
#pressure_advance_smooth_time: 0.040

#[tmc2209 extruder]
#uart_pin: gpio9
#tx_pin: gpio8
#uart_address: 3
#interpolate: False
## For OMC (StepperOnline) 14HR07-1004VRN 1A 0.9°
#run_current: 0.4   # for OMC 14HR07-1004VRN rated at 1A
## For LDO LDO 36STH17-1004AHG 1A 1.8° 
#run_current: 0.3   # for LDO 36STH17-1004AHG
#sense_resistor: 0.110
#stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
#   Filament Runout Sensor
#####################################################################

[filament_switch_sensor Filament_Runout_Sensor]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode: 
    M600 
    #PAUSE_PARK
    M117 Out of Filament
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
insert_gcode:
    M117 Resuming
    #RESUME_MACRO
    #wait 60
    #M117
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: gpio16
#   The pin on which the switch is connected. This parameter must be
#   provided.

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: gpio21
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: gpio26
smooth_time: 3.0
pwm_cycle_time: 0.02506 # 39.9Hz
max_power: 0.8                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

#####################################################################
#   Fan Control
#####################################################################

[fan_generic nevermore]
pin: gpio18
max_power: 1.0
shutdown_speed: 0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

[fan_generic pi_fan]
pin: gpio20
max_power: 1.0
shutdown_speed: 0
cycle_time: 0.010
#hardware_pwm:
kick_start_time: 0.5
#off_below: 0.13
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#   See the "fan" section for a description of the above parameters.


#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 2400

[safe_z_home]
home_xy_position: 60,0 #120,120
speed: 50.0
z_hop: 0.15

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

#####################################################################
#   Optional G-Code features
#####################################################################

[force_move]
enable_force_move: true                                             #   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION extended G-Code commands. The default is false.

#[exclude_object]

[pause_resume]
recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

#[gcode_arcs]
#resolution: 0.05
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[temperature_sensor chamber]
sensor_type: ATC Semitec 104GT-2
sensor_pin: gpio27
min_temp: 10
max_temp: 110
#   See the "extruder" section for the definition of the above
#   parameters.
gcode_id: C
#   See the "heater_generic" section for the definition of this
#   parameter.


#####################################################################
#   LEDS
#####################################################################

[neopixel bed_neopixel]
pin: gpio24
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 1
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
initial_RED: 0.2
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
#   See the "led" section for information on these parameters.

[led chember_light]
white_pin: gpio17

#[neopixel head_neopixel]
#pin: PA1
#   The pin connected to the neopixel. This parameter must be
#   provided.
#chain_count: 2
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: GRB
#   Set the pixel order required by the LED hardware (using a string
#   containing the letters R, G, B, W with W optional). Alternatively,
#   this may be a comma separated list of pixel orders - one for each
#   LED in the chain. The default is GRB.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0
#   See the "led" section for information on these parameters.

#[neopixel board_rgb]
#pin: gpio24
#chain_count: 1
#color_order: GRB
#initial_RED: 0.3
#initial_GREEN: 0.3
#initial_BLUE: 0.3

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 41.212
#*# pid_ki = 1.750
#*# pid_kd = 242.636
#*#
#*# [stepper_z]
#*# position_endstop = -0.120
